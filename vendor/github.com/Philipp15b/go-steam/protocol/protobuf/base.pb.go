// Code generated by protoc-gen-go.
// source: steammessages_base.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CMsgProtoBufHeader struct {
	Steamid           *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	ClientSessionid   *int32  `protobuf:"varint,2,opt,name=client_sessionid" json:"client_sessionid,omitempty"`
	RoutingAppid      *uint32 `protobuf:"varint,3,opt,name=routing_appid" json:"routing_appid,omitempty"`
	JobidSource       *uint64 `protobuf:"fixed64,10,opt,name=jobid_source,def=18446744073709551615" json:"jobid_source,omitempty"`
	JobidTarget       *uint64 `protobuf:"fixed64,11,opt,name=jobid_target,def=18446744073709551615" json:"jobid_target,omitempty"`
	TargetJobName     *string `protobuf:"bytes,12,opt,name=target_job_name" json:"target_job_name,omitempty"`
	SeqNum            *int32  `protobuf:"varint,24,opt,name=seq_num" json:"seq_num,omitempty"`
	Eresult           *int32  `protobuf:"varint,13,opt,name=eresult,def=2" json:"eresult,omitempty"`
	ErrorMessage      *string `protobuf:"bytes,14,opt,name=error_message" json:"error_message,omitempty"`
	Ip                *uint32 `protobuf:"varint,15,opt,name=ip" json:"ip,omitempty"`
	AuthAccountFlags  *uint32 `protobuf:"varint,16,opt,name=auth_account_flags" json:"auth_account_flags,omitempty"`
	TokenSource       *uint32 `protobuf:"varint,22,opt,name=token_source" json:"token_source,omitempty"`
	AdminSpoofingUser *bool   `protobuf:"varint,23,opt,name=admin_spoofing_user" json:"admin_spoofing_user,omitempty"`
	TransportError    *int32  `protobuf:"varint,17,opt,name=transport_error,def=1" json:"transport_error,omitempty"`
	Messageid         *uint64 `protobuf:"varint,18,opt,name=messageid,def=18446744073709551615" json:"messageid,omitempty"`
	PublisherGroupId  *uint32 `protobuf:"varint,19,opt,name=publisher_group_id" json:"publisher_group_id,omitempty"`
	Sysid             *uint32 `protobuf:"varint,20,opt,name=sysid" json:"sysid,omitempty"`
	TraceTag          *uint64 `protobuf:"varint,21,opt,name=trace_tag" json:"trace_tag,omitempty"`
	WebapiKeyId       *uint32 `protobuf:"varint,25,opt,name=webapi_key_id" json:"webapi_key_id,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CMsgProtoBufHeader) Reset()                    { *m = CMsgProtoBufHeader{} }
func (m *CMsgProtoBufHeader) String() string            { return proto.CompactTextString(m) }
func (*CMsgProtoBufHeader) ProtoMessage()               {}
func (*CMsgProtoBufHeader) Descriptor() ([]byte, []int) { return base_fileDescriptor0, []int{0} }

const Default_CMsgProtoBufHeader_JobidSource uint64 = 18446744073709551615
const Default_CMsgProtoBufHeader_JobidTarget uint64 = 18446744073709551615
const Default_CMsgProtoBufHeader_Eresult int32 = 2
const Default_CMsgProtoBufHeader_TransportError int32 = 1
const Default_CMsgProtoBufHeader_Messageid uint64 = 18446744073709551615

func (m *CMsgProtoBufHeader) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CMsgProtoBufHeader) GetClientSessionid() int32 {
	if m != nil && m.ClientSessionid != nil {
		return *m.ClientSessionid
	}
	return 0
}

func (m *CMsgProtoBufHeader) GetRoutingAppid() uint32 {
	if m != nil && m.RoutingAppid != nil {
		return *m.RoutingAppid
	}
	return 0
}

func (m *CMsgProtoBufHeader) GetJobidSource() uint64 {
	if m != nil && m.JobidSource != nil {
		return *m.JobidSource
	}
	return Default_CMsgProtoBufHeader_JobidSource
}

func (m *CMsgProtoBufHeader) GetJobidTarget() uint64 {
	if m != nil && m.JobidTarget != nil {
		return *m.JobidTarget
	}
	return Default_CMsgProtoBufHeader_JobidTarget
}

func (m *CMsgProtoBufHeader) GetTargetJobName() string {
	if m != nil && m.TargetJobName != nil {
		return *m.TargetJobName
	}
	return ""
}

func (m *CMsgProtoBufHeader) GetSeqNum() int32 {
	if m != nil && m.SeqNum != nil {
		return *m.SeqNum
	}
	return 0
}

func (m *CMsgProtoBufHeader) GetEresult() int32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgProtoBufHeader_Eresult
}

func (m *CMsgProtoBufHeader) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *CMsgProtoBufHeader) GetIp() uint32 {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return 0
}

func (m *CMsgProtoBufHeader) GetAuthAccountFlags() uint32 {
	if m != nil && m.AuthAccountFlags != nil {
		return *m.AuthAccountFlags
	}
	return 0
}

func (m *CMsgProtoBufHeader) GetTokenSource() uint32 {
	if m != nil && m.TokenSource != nil {
		return *m.TokenSource
	}
	return 0
}

func (m *CMsgProtoBufHeader) GetAdminSpoofingUser() bool {
	if m != nil && m.AdminSpoofingUser != nil {
		return *m.AdminSpoofingUser
	}
	return false
}

func (m *CMsgProtoBufHeader) GetTransportError() int32 {
	if m != nil && m.TransportError != nil {
		return *m.TransportError
	}
	return Default_CMsgProtoBufHeader_TransportError
}

func (m *CMsgProtoBufHeader) GetMessageid() uint64 {
	if m != nil && m.Messageid != nil {
		return *m.Messageid
	}
	return Default_CMsgProtoBufHeader_Messageid
}

func (m *CMsgProtoBufHeader) GetPublisherGroupId() uint32 {
	if m != nil && m.PublisherGroupId != nil {
		return *m.PublisherGroupId
	}
	return 0
}

func (m *CMsgProtoBufHeader) GetSysid() uint32 {
	if m != nil && m.Sysid != nil {
		return *m.Sysid
	}
	return 0
}

func (m *CMsgProtoBufHeader) GetTraceTag() uint64 {
	if m != nil && m.TraceTag != nil {
		return *m.TraceTag
	}
	return 0
}

func (m *CMsgProtoBufHeader) GetWebapiKeyId() uint32 {
	if m != nil && m.WebapiKeyId != nil {
		return *m.WebapiKeyId
	}
	return 0
}

type CMsgMulti struct {
	SizeUnzipped     *uint32 `protobuf:"varint,1,opt,name=size_unzipped" json:"size_unzipped,omitempty"`
	MessageBody      []byte  `protobuf:"bytes,2,opt,name=message_body" json:"message_body,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgMulti) Reset()                    { *m = CMsgMulti{} }
func (m *CMsgMulti) String() string            { return proto.CompactTextString(m) }
func (*CMsgMulti) ProtoMessage()               {}
func (*CMsgMulti) Descriptor() ([]byte, []int) { return base_fileDescriptor0, []int{1} }

func (m *CMsgMulti) GetSizeUnzipped() uint32 {
	if m != nil && m.SizeUnzipped != nil {
		return *m.SizeUnzipped
	}
	return 0
}

func (m *CMsgMulti) GetMessageBody() []byte {
	if m != nil {
		return m.MessageBody
	}
	return nil
}

type CMsgProtobufWrapped struct {
	MessageBody      []byte `protobuf:"bytes,1,opt,name=message_body" json:"message_body,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgProtobufWrapped) Reset()                    { *m = CMsgProtobufWrapped{} }
func (m *CMsgProtobufWrapped) String() string            { return proto.CompactTextString(m) }
func (*CMsgProtobufWrapped) ProtoMessage()               {}
func (*CMsgProtobufWrapped) Descriptor() ([]byte, []int) { return base_fileDescriptor0, []int{2} }

func (m *CMsgProtobufWrapped) GetMessageBody() []byte {
	if m != nil {
		return m.MessageBody
	}
	return nil
}

type CMsgAuthTicket struct {
	Estate           *uint32 `protobuf:"varint,1,opt,name=estate" json:"estate,omitempty"`
	Eresult          *uint32 `protobuf:"varint,2,opt,name=eresult,def=2" json:"eresult,omitempty"`
	Steamid          *uint64 `protobuf:"fixed64,3,opt,name=steamid" json:"steamid,omitempty"`
	Gameid           *uint64 `protobuf:"fixed64,4,opt,name=gameid" json:"gameid,omitempty"`
	HSteamPipe       *uint32 `protobuf:"varint,5,opt,name=h_steam_pipe" json:"h_steam_pipe,omitempty"`
	TicketCrc        *uint32 `protobuf:"varint,6,opt,name=ticket_crc" json:"ticket_crc,omitempty"`
	Ticket           []byte  `protobuf:"bytes,7,opt,name=ticket" json:"ticket,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgAuthTicket) Reset()                    { *m = CMsgAuthTicket{} }
func (m *CMsgAuthTicket) String() string            { return proto.CompactTextString(m) }
func (*CMsgAuthTicket) ProtoMessage()               {}
func (*CMsgAuthTicket) Descriptor() ([]byte, []int) { return base_fileDescriptor0, []int{3} }

const Default_CMsgAuthTicket_Eresult uint32 = 2

func (m *CMsgAuthTicket) GetEstate() uint32 {
	if m != nil && m.Estate != nil {
		return *m.Estate
	}
	return 0
}

func (m *CMsgAuthTicket) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgAuthTicket_Eresult
}

func (m *CMsgAuthTicket) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CMsgAuthTicket) GetGameid() uint64 {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return 0
}

func (m *CMsgAuthTicket) GetHSteamPipe() uint32 {
	if m != nil && m.HSteamPipe != nil {
		return *m.HSteamPipe
	}
	return 0
}

func (m *CMsgAuthTicket) GetTicketCrc() uint32 {
	if m != nil && m.TicketCrc != nil {
		return *m.TicketCrc
	}
	return 0
}

func (m *CMsgAuthTicket) GetTicket() []byte {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type CCDDBAppDetailCommon struct {
	Appid                 *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Name                  *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Icon                  *string `protobuf:"bytes,3,opt,name=icon" json:"icon,omitempty"`
	Logo                  *string `protobuf:"bytes,4,opt,name=logo" json:"logo,omitempty"`
	LogoSmall             *string `protobuf:"bytes,5,opt,name=logo_small" json:"logo_small,omitempty"`
	Tool                  *bool   `protobuf:"varint,6,opt,name=tool" json:"tool,omitempty"`
	Demo                  *bool   `protobuf:"varint,7,opt,name=demo" json:"demo,omitempty"`
	Media                 *bool   `protobuf:"varint,8,opt,name=media" json:"media,omitempty"`
	CommunityVisibleStats *bool   `protobuf:"varint,9,opt,name=community_visible_stats" json:"community_visible_stats,omitempty"`
	FriendlyName          *string `protobuf:"bytes,10,opt,name=friendly_name" json:"friendly_name,omitempty"`
	Propagation           *string `protobuf:"bytes,11,opt,name=propagation" json:"propagation,omitempty"`
	HasAdultContent       *bool   `protobuf:"varint,12,opt,name=has_adult_content" json:"has_adult_content,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *CCDDBAppDetailCommon) Reset()                    { *m = CCDDBAppDetailCommon{} }
func (m *CCDDBAppDetailCommon) String() string            { return proto.CompactTextString(m) }
func (*CCDDBAppDetailCommon) ProtoMessage()               {}
func (*CCDDBAppDetailCommon) Descriptor() ([]byte, []int) { return base_fileDescriptor0, []int{4} }

func (m *CCDDBAppDetailCommon) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCDDBAppDetailCommon) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CCDDBAppDetailCommon) GetIcon() string {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return ""
}

func (m *CCDDBAppDetailCommon) GetLogo() string {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return ""
}

func (m *CCDDBAppDetailCommon) GetLogoSmall() string {
	if m != nil && m.LogoSmall != nil {
		return *m.LogoSmall
	}
	return ""
}

func (m *CCDDBAppDetailCommon) GetTool() bool {
	if m != nil && m.Tool != nil {
		return *m.Tool
	}
	return false
}

func (m *CCDDBAppDetailCommon) GetDemo() bool {
	if m != nil && m.Demo != nil {
		return *m.Demo
	}
	return false
}

func (m *CCDDBAppDetailCommon) GetMedia() bool {
	if m != nil && m.Media != nil {
		return *m.Media
	}
	return false
}

func (m *CCDDBAppDetailCommon) GetCommunityVisibleStats() bool {
	if m != nil && m.CommunityVisibleStats != nil {
		return *m.CommunityVisibleStats
	}
	return false
}

func (m *CCDDBAppDetailCommon) GetFriendlyName() string {
	if m != nil && m.FriendlyName != nil {
		return *m.FriendlyName
	}
	return ""
}

func (m *CCDDBAppDetailCommon) GetPropagation() string {
	if m != nil && m.Propagation != nil {
		return *m.Propagation
	}
	return ""
}

func (m *CCDDBAppDetailCommon) GetHasAdultContent() bool {
	if m != nil && m.HasAdultContent != nil {
		return *m.HasAdultContent
	}
	return false
}

type CMsgAppRights struct {
	EditInfo                 *bool  `protobuf:"varint,1,opt,name=edit_info" json:"edit_info,omitempty"`
	Publish                  *bool  `protobuf:"varint,2,opt,name=publish" json:"publish,omitempty"`
	ViewErrorData            *bool  `protobuf:"varint,3,opt,name=view_error_data" json:"view_error_data,omitempty"`
	Download                 *bool  `protobuf:"varint,4,opt,name=download" json:"download,omitempty"`
	UploadCdkeys             *bool  `protobuf:"varint,5,opt,name=upload_cdkeys" json:"upload_cdkeys,omitempty"`
	GenerateCdkeys           *bool  `protobuf:"varint,6,opt,name=generate_cdkeys" json:"generate_cdkeys,omitempty"`
	ViewFinancials           *bool  `protobuf:"varint,7,opt,name=view_financials" json:"view_financials,omitempty"`
	ManageCeg                *bool  `protobuf:"varint,8,opt,name=manage_ceg" json:"manage_ceg,omitempty"`
	ManageSigning            *bool  `protobuf:"varint,9,opt,name=manage_signing" json:"manage_signing,omitempty"`
	ManageCdkeys             *bool  `protobuf:"varint,10,opt,name=manage_cdkeys" json:"manage_cdkeys,omitempty"`
	EditMarketing            *bool  `protobuf:"varint,11,opt,name=edit_marketing" json:"edit_marketing,omitempty"`
	EconomySupport           *bool  `protobuf:"varint,12,opt,name=economy_support" json:"economy_support,omitempty"`
	EconomySupportSupervisor *bool  `protobuf:"varint,13,opt,name=economy_support_supervisor" json:"economy_support_supervisor,omitempty"`
	ManagePricing            *bool  `protobuf:"varint,14,opt,name=manage_pricing" json:"manage_pricing,omitempty"`
	BroadcastLive            *bool  `protobuf:"varint,15,opt,name=broadcast_live" json:"broadcast_live,omitempty"`
	XXX_unrecognized         []byte `json:"-"`
}

func (m *CMsgAppRights) Reset()                    { *m = CMsgAppRights{} }
func (m *CMsgAppRights) String() string            { return proto.CompactTextString(m) }
func (*CMsgAppRights) ProtoMessage()               {}
func (*CMsgAppRights) Descriptor() ([]byte, []int) { return base_fileDescriptor0, []int{5} }

func (m *CMsgAppRights) GetEditInfo() bool {
	if m != nil && m.EditInfo != nil {
		return *m.EditInfo
	}
	return false
}

func (m *CMsgAppRights) GetPublish() bool {
	if m != nil && m.Publish != nil {
		return *m.Publish
	}
	return false
}

func (m *CMsgAppRights) GetViewErrorData() bool {
	if m != nil && m.ViewErrorData != nil {
		return *m.ViewErrorData
	}
	return false
}

func (m *CMsgAppRights) GetDownload() bool {
	if m != nil && m.Download != nil {
		return *m.Download
	}
	return false
}

func (m *CMsgAppRights) GetUploadCdkeys() bool {
	if m != nil && m.UploadCdkeys != nil {
		return *m.UploadCdkeys
	}
	return false
}

func (m *CMsgAppRights) GetGenerateCdkeys() bool {
	if m != nil && m.GenerateCdkeys != nil {
		return *m.GenerateCdkeys
	}
	return false
}

func (m *CMsgAppRights) GetViewFinancials() bool {
	if m != nil && m.ViewFinancials != nil {
		return *m.ViewFinancials
	}
	return false
}

func (m *CMsgAppRights) GetManageCeg() bool {
	if m != nil && m.ManageCeg != nil {
		return *m.ManageCeg
	}
	return false
}

func (m *CMsgAppRights) GetManageSigning() bool {
	if m != nil && m.ManageSigning != nil {
		return *m.ManageSigning
	}
	return false
}

func (m *CMsgAppRights) GetManageCdkeys() bool {
	if m != nil && m.ManageCdkeys != nil {
		return *m.ManageCdkeys
	}
	return false
}

func (m *CMsgAppRights) GetEditMarketing() bool {
	if m != nil && m.EditMarketing != nil {
		return *m.EditMarketing
	}
	return false
}

func (m *CMsgAppRights) GetEconomySupport() bool {
	if m != nil && m.EconomySupport != nil {
		return *m.EconomySupport
	}
	return false
}

func (m *CMsgAppRights) GetEconomySupportSupervisor() bool {
	if m != nil && m.EconomySupportSupervisor != nil {
		return *m.EconomySupportSupervisor
	}
	return false
}

func (m *CMsgAppRights) GetManagePricing() bool {
	if m != nil && m.ManagePricing != nil {
		return *m.ManagePricing
	}
	return false
}

func (m *CMsgAppRights) GetBroadcastLive() bool {
	if m != nil && m.BroadcastLive != nil {
		return *m.BroadcastLive
	}
	return false
}

var E_MsgpoolSoftLimit = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*int32)(nil),
	Field:         50000,
	Name:          "msgpool_soft_limit",
	Tag:           "varint,50000,opt,name=msgpool_soft_limit,def=32",
}

var E_MsgpoolHardLimit = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*int32)(nil),
	Field:         50001,
	Name:          "msgpool_hard_limit",
	Tag:           "varint,50001,opt,name=msgpool_hard_limit,def=384",
}

func init() {
	proto.RegisterType((*CMsgProtoBufHeader)(nil), "CMsgProtoBufHeader")
	proto.RegisterType((*CMsgMulti)(nil), "CMsgMulti")
	proto.RegisterType((*CMsgProtobufWrapped)(nil), "CMsgProtobufWrapped")
	proto.RegisterType((*CMsgAuthTicket)(nil), "CMsgAuthTicket")
	proto.RegisterType((*CCDDBAppDetailCommon)(nil), "CCDDBAppDetailCommon")
	proto.RegisterType((*CMsgAppRights)(nil), "CMsgAppRights")
	proto.RegisterExtension(E_MsgpoolSoftLimit)
	proto.RegisterExtension(E_MsgpoolHardLimit)
}

var base_fileDescriptor0 = []byte{
	// 906 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x6f, 0x1c, 0x45,
	0x10, 0x65, 0x77, 0xfd, 0x31, 0xdb, 0xde, 0x5d, 0xdb, 0x63, 0x27, 0xee, 0x98, 0x43, 0xa2, 0xbd,
	0x80, 0x40, 0x72, 0xe2, 0x78, 0x1d, 0x1b, 0xdf, 0xfc, 0x71, 0xc8, 0xc5, 0x02, 0x21, 0x24, 0x8e,
	0xad, 0x9e, 0x99, 0xda, 0xd9, 0xc6, 0x33, 0xdd, 0x4d, 0x77, 0x8f, 0xad, 0xcd, 0x89, 0x13, 0x57,
	0xfe, 0x1a, 0xfc, 0x12, 0x6e, 0x88, 0x23, 0xd5, 0x35, 0xb3, 0x38, 0x04, 0x81, 0x72, 0x1a, 0x55,
	0xd5, 0xeb, 0xaa, 0x57, 0xaf, 0xaa, 0x86, 0x71, 0x1f, 0x40, 0xd6, 0x35, 0x78, 0x2f, 0x4b, 0xf0,
	0x22, 0x93, 0x1e, 0x8e, 0xac, 0x33, 0xc1, 0x1c, 0xbe, 0x28, 0x8d, 0x29, 0x2b, 0x78, 0x49, 0x56,
	0xd6, 0xcc, 0x5f, 0x16, 0xe0, 0x73, 0xa7, 0x6c, 0x30, 0xae, 0x45, 0x4c, 0xff, 0x1c, 0xb0, 0xf4,
	0xfa, 0xd6, 0x97, 0xdf, 0x44, 0xeb, 0xaa, 0x99, 0xbf, 0x05, 0x59, 0x80, 0x4b, 0xb7, 0xd9, 0x26,
	0x25, 0x55, 0x05, 0xef, 0xbd, 0xe8, 0x7d, 0xbe, 0x91, 0x72, 0xb6, 0x93, 0x57, 0x0a, 0x74, 0x10,
	0x1e, 0xeb, 0x28, 0xa3, 0x31, 0xd2, 0xc7, 0xc8, 0x7a, 0xfa, 0x84, 0x8d, 0x9d, 0x69, 0x82, 0xd2,
	0xa5, 0x90, 0xd6, 0xa2, 0x7b, 0x80, 0xee, 0x71, 0xfa, 0x05, 0x1b, 0xfd, 0x60, 0x32, 0x55, 0x08,
	0x6f, 0x1a, 0x97, 0x03, 0x67, 0x31, 0xcd, 0xc5, 0xfe, 0xf1, 0xf9, 0x6c, 0xf6, 0xe6, 0x6c, 0x36,
	0x7b, 0x75, 0x76, 0x72, 0xf6, 0xea, 0xab, 0xd3, 0xd3, 0xe3, 0x37, 0xc7, 0xa7, 0x8f, 0xd8, 0x20,
	0x5d, 0x09, 0x81, 0x6f, 0xfd, 0x0f, 0xf6, 0x80, 0x6d, 0xb7, 0x28, 0x81, 0x4f, 0x84, 0x96, 0x35,
	0xf0, 0x11, 0xc2, 0x87, 0x44, 0x19, 0x7e, 0x14, 0xba, 0xa9, 0x39, 0x27, 0x62, 0x29, 0xdb, 0x04,
	0x07, 0xbe, 0xa9, 0x02, 0x1f, 0x47, 0xc7, 0x45, 0xef, 0x75, 0x24, 0x0b, 0xce, 0x19, 0x27, 0x3a,
	0xb5, 0xf8, 0x84, 0xde, 0x32, 0xd6, 0x57, 0x96, 0x6f, 0x13, 0xf1, 0x43, 0x96, 0xca, 0x26, 0x2c,
	0x84, 0xcc, 0x73, 0xd3, 0x60, 0xbf, 0xf3, 0x4a, 0x96, 0x9e, 0xef, 0x50, 0x6c, 0x9f, 0x8d, 0x82,
	0xb9, 0x03, 0xbd, 0x6a, 0xea, 0x29, 0x79, 0x3f, 0x65, 0x7b, 0xb2, 0xa8, 0x15, 0x7a, 0xad, 0x31,
	0xf3, 0x28, 0x44, 0xe3, 0xc1, 0xf1, 0x03, 0x0c, 0x26, 0x98, 0x6e, 0x3b, 0x38, 0xa9, 0x31, 0xe4,
	0x82, 0xa0, 0xda, 0x7c, 0xb7, 0x65, 0x73, 0x9c, 0x7e, 0xc6, 0x86, 0x1d, 0x0f, 0x94, 0x2d, 0x45,
	0xef, 0xda, 0x7f, 0x34, 0x8d, 0x9c, 0x6c, 0x93, 0x55, 0xca, 0x2f, 0xc0, 0x89, 0x12, 0xe5, 0xb6,
	0x02, 0x5f, 0xec, 0x51, 0xf5, 0x31, 0x5b, 0xf7, 0x4b, 0x8f, 0xe6, 0x3e, 0x99, 0xbb, 0x6c, 0x88,
	0xf5, 0x72, 0x40, 0x2d, 0x4b, 0xfe, 0x24, 0xe6, 0x8c, 0x4d, 0x3f, 0x40, 0x26, 0xad, 0x12, 0x77,
	0xb0, 0x8c, 0x0f, 0x9f, 0x45, 0xe4, 0xf4, 0x9c, 0x0d, 0xe3, 0xe4, 0x6f, 0x51, 0x20, 0x15, 0x31,
	0x5e, 0xbd, 0x03, 0xd1, 0xe8, 0x77, 0xca, 0x5a, 0x68, 0xc7, 0x4e, 0x0d, 0x77, 0x0c, 0x45, 0x66,
	0x8a, 0x25, 0x8d, 0x7c, 0x34, 0xfd, 0x92, 0xed, 0xfd, 0xbd, 0x33, 0xb8, 0x55, 0xdf, 0x3b, 0x19,
	0x9f, 0xfc, 0x0b, 0xdc, 0x23, 0xf0, 0x2f, 0x3d, 0x36, 0x89, 0xe8, 0x4b, 0x14, 0xf5, 0x3b, 0x95,
	0xdf, 0x41, 0x48, 0x27, 0x6c, 0x03, 0x7c, 0x90, 0x01, 0xba, 0x2a, 0xef, 0x4d, 0x2a, 0x16, 0x18,
	0xc7, 0x49, 0xbd, 0xb7, 0x81, 0x03, 0xda, 0x40, 0x7c, 0x54, 0xe2, 0xb4, 0xd1, 0x5e, 0x23, 0x1b,
	0xab, 0x2d, 0x04, 0x41, 0x84, 0x55, 0x16, 0xf8, 0x7a, 0x97, 0x8a, 0x05, 0x2a, 0x22, 0x72, 0x97,
	0xf3, 0x0d, 0xf2, 0xe1, 0xcb, 0xd6, 0xc7, 0x37, 0x89, 0xd1, 0x1f, 0x3d, 0xb6, 0x7f, 0x7d, 0x7d,
	0x73, 0x73, 0x75, 0x69, 0xed, 0x0d, 0x04, 0xa9, 0xaa, 0x6b, 0x53, 0xd7, 0x46, 0x47, 0x29, 0xdb,
	0x15, 0x6e, 0x69, 0x8d, 0xd8, 0x1a, 0xed, 0x57, 0x9f, 0x76, 0x04, 0x2d, 0x95, 0x1b, 0x4d, 0x6c,
	0xc8, 0xaa, 0x4c, 0x69, 0x88, 0xcb, 0x30, 0x56, 0x8d, 0x96, 0xf0, 0xb5, 0xac, 0x2a, 0x62, 0x42,
	0x88, 0x60, 0x4c, 0x45, 0x1c, 0x92, 0x68, 0x15, 0x50, 0x1b, 0x62, 0x90, 0xc4, 0x42, 0x35, 0x14,
	0x4a, 0xf2, 0x84, 0xcc, 0xe7, 0xec, 0x20, 0x47, 0x06, 0x8d, 0x56, 0x61, 0x29, 0xee, 0x95, 0x57,
	0x59, 0x05, 0x22, 0x0a, 0xe4, 0xf9, 0x90, 0x00, 0x38, 0x9d, 0xb9, 0xc3, 0xeb, 0x2b, 0xaa, 0x65,
	0xbb, 0xf2, 0x8c, 0x4a, 0xec, 0xb1, 0x2d, 0xbc, 0x62, 0x2b, 0x4b, 0x19, 0xf0, 0x22, 0xe9, 0x6c,
	0x86, 0xe9, 0x33, 0xb6, 0xbb, 0x90, 0x5e, 0xc8, 0x02, 0xe5, 0x14, 0x48, 0x38, 0xe0, 0xd1, 0xd2,
	0x89, 0x24, 0xd3, 0xdf, 0xfb, 0x6c, 0x4c, 0xa3, 0xb0, 0xf6, 0x5b, 0x55, 0x2e, 0x82, 0x8f, 0xdb,
	0x82, 0x3c, 0x82, 0x50, 0x7a, 0x6e, 0xa8, 0xeb, 0x24, 0x0a, 0xdf, 0xed, 0x1a, 0x35, 0x9e, 0xc4,
	0x8b, 0xbb, 0x57, 0xf0, 0xd0, 0x2e, 0xaf, 0x28, 0x64, 0x90, 0xa4, 0x41, 0x92, 0xee, 0xb0, 0xa4,
	0x30, 0x0f, 0xba, 0x32, 0xb2, 0x9d, 0x09, 0xf1, 0x6c, 0x6c, 0xb4, 0x45, 0x5e, 0xe0, 0xae, 0x79,
	0x92, 0x82, 0x32, 0x94, 0xa0, 0xc1, 0xe1, 0xc4, 0x57, 0x81, 0x8d, 0x7f, 0xa4, 0xc6, 0xa3, 0x91,
	0x3a, 0x57, 0xb2, 0xf2, 0x9d, 0x40, 0x28, 0x68, 0x2d, 0x75, 0xdc, 0xa4, 0x1c, 0xca, 0x4e, 0xa5,
	0xa7, 0x6c, 0xd2, 0xf9, 0xbc, 0x2a, 0x35, 0x9e, 0xd9, 0xa3, 0x38, 0x2b, 0x6c, 0x9b, 0x9b, 0xad,
	0xe0, 0xd4, 0x5a, 0x2d, 0x1d, 0x8e, 0x3e, 0xc2, 0xb7, 0x56, 0x35, 0x01, 0x65, 0x31, 0xf5, 0x52,
	0xf8, 0xc6, 0xc6, 0xb3, 0x6c, 0xd5, 0x49, 0xa7, 0xec, 0xf0, 0x83, 0x40, 0xfc, 0x82, 0xc3, 0x81,
	0xe0, 0xd1, 0x8e, 0x3f, 0xe0, 0x60, 0x9d, 0xca, 0x63, 0xd2, 0xc9, 0xca, 0x9f, 0x39, 0xec, 0x3b,
	0x97, 0x3e, 0x88, 0x4a, 0xdd, 0x03, 0xfd, 0x4c, 0x92, 0x8b, 0x4b, 0x96, 0xd6, 0xbe, 0xc4, 0xdf,
	0x42, 0x85, 0xbf, 0x8c, 0x79, 0x0c, 0xd5, 0x2a, 0xa4, 0xcf, 0x8f, 0xda, 0xff, 0xf2, 0xd1, 0xea,
	0xbf, 0x7c, 0x74, 0xdb, 0xde, 0xcd, 0xd7, 0x36, 0x0e, 0xd2, 0xf3, 0x5f, 0x7f, 0x1e, 0xd0, 0x3f,
	0xa2, 0x7f, 0xf2, 0xfa, 0xe2, 0xea, 0x31, 0xc5, 0x42, 0xba, 0xe2, 0x63, 0x53, 0xfc, 0xd6, 0xa5,
	0x18, 0x9c, 0x9c, 0xcf, 0xae, 0xd6, 0xdf, 0xf6, 0x7e, 0xea, 0x7d, 0xf2, 0x57, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x66, 0x1a, 0xa6, 0xfc, 0x29, 0x06, 0x00, 0x00,
}
